var l=Object.defineProperty;var m=(n,t,e)=>t in n?l(n,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[t]=e;var a=(n,t,e)=>(m(n,typeof t!="symbol"?t+"":t,e),e);import{c as r,q as d}from"./index.9352f645.js";import{P as c,Q as y,au as T,av as b}from"./vendor.38d4a956.js";const p=[{inputs:[],name:"InsufficientBalance",type:"error"},{inputs:[],name:"InvalidAmount",type:"error"},{inputs:[],name:"PoolIsNotEmpty",type:"error"},{inputs:[],name:"PoolIsNotStarted",type:"error"},{inputs:[],name:"TransferFailed",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"uint256",name:"amount",type:"uint256"}],name:"Deposited",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"uint256",name:"amount",type:"uint256"}],name:"Harvested",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint8",name:"version",type:"uint8"}],name:"Initialized",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"result",type:"uint256"}],name:"UIntResult",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"account",type:"address"},{indexed:!0,internalType:"uint256",name:"amount",type:"uint256"}],name:"Withdrawed",type:"event"},{inputs:[{internalType:"address",name:"account",type:"address"},{components:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"claimed",type:"uint256"},{internalType:"uint256",name:"harvested",type:"uint256"},{internalType:"uint256",name:"time",type:"uint256"},{internalType:"uint256",name:"lastWithdrawAt",type:"uint256"},{internalType:"bool",name:"isEnded",type:"bool"}],internalType:"struct FarmV2Context.Deposit",name:"deposit_",type:"tuple"}],name:"addDeposit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"apr",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"available",outputs:[{internalType:"uint256",name:"result",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"claimed",type:"uint256"},{internalType:"uint256",name:"harvested",type:"uint256"},{internalType:"uint256",name:"time",type:"uint256"},{internalType:"uint256",name:"lastWithdrawAt",type:"uint256"},{internalType:"bool",name:"isEnded",type:"bool"}],internalType:"struct FarmV2Context.Deposit",name:"deposit_",type:"tuple"},{internalType:"uint256",name:"apr_",type:"uint256"},{internalType:"uint256",name:"duration_",type:"uint256"}],name:"calculatorEarned",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"deposit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"duration",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"earned",outputs:[{internalType:"uint256",name:"earned_",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"index",type:"uint256"}],name:"getDeposit",outputs:[{components:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"claimed",type:"uint256"},{internalType:"uint256",name:"harvested",type:"uint256"},{internalType:"uint256",name:"time",type:"uint256"},{internalType:"uint256",name:"lastWithdrawAt",type:"uint256"},{internalType:"bool",name:"isEnded",type:"bool"}],internalType:"struct FarmV2Context.Deposit",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getDeposits",outputs:[{components:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"claimed",type:"uint256"},{internalType:"uint256",name:"harvested",type:"uint256"},{internalType:"uint256",name:"time",type:"uint256"},{internalType:"uint256",name:"lastWithdrawAt",type:"uint256"},{internalType:"bool",name:"isEnded",type:"bool"}],internalType:"struct FarmV2Context.Deposit[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"claimed",type:"uint256"},{internalType:"uint256",name:"harvested",type:"uint256"},{internalType:"uint256",name:"time",type:"uint256"},{internalType:"uint256",name:"lastWithdrawAt",type:"uint256"},{internalType:"bool",name:"isEnded",type:"bool"}],internalType:"struct FarmV2Context.Deposit",name:"deposit_",type:"tuple"},{internalType:"uint256",name:"apr_",type:"uint256"},{internalType:"uint256",name:"duration_",type:"uint256"}],name:"getEarned",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"harvest",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"uint256",name:"apr",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"bool",name:"isLocked",type:"bool"},{internalType:"uint256",name:"maxDeposit",type:"uint256"},{internalType:"uint256",name:"rewardsRate",type:"uint256"},{internalType:"uint256",name:"startAt",type:"uint256"},{internalType:"contract IERC20MetadataUpgradeable",name:"rewardsToken",type:"address"},{internalType:"contract IERC20MetadataUpgradeable",name:"stakeToken",type:"address"}],internalType:"struct FarmV2Context.Configuration",name:"config_",type:"tuple"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"isLocked",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"maxDeposit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"rewardsPool",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"rewardsRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"rewardsToken",outputs:[{internalType:"contract IERC20MetadataUpgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"setAccountBalance",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"status",type:"bool"}],name:"setLockStatus",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"setMaxDeposit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"value",type:"uint256"}],name:"setRewardsRate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"time",type:"uint256"}],name:"setStartTime",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"setTotalStaked",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"stakeToken",outputs:[{internalType:"contract IERC20MetadataUpgradeable",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"startAt",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalStaked",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"withdraw",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"withdrawable",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"}];class o{static createInterface(){return new c(p)}static connect(t,e){return new y(t,p,e)}}a(o,"abi",p);const i=class{constructor(t){a(this,"provider");a(this,"useSigner",!1);this.provider=t}static Rpc(){return new i("Rpc")}static Web3(){return new i("Web3")}Signer(){return this.useSigner=!0,this}async Contract(t,e){const s=await this.getProvider();return new y(t,e,this.useSigner?s.getSigner():s)}async StakeContract(t){return this.Contract(t,o.createInterface())}async getProvider(){if(this.provider=="Rpc")return i.rpcProvider;const t=await d();if(!t)throw new Error("Metamask not installed.");return new b(t)}};let u=i;a(u,"network",r.networks[r.network]),a(u,"rpcProvider",new T(i.network.rpcUrl));export{u as E,o as F};
